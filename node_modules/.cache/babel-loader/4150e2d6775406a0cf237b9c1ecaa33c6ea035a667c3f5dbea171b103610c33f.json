{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\projects\\\\02-second-project\\\\messanger-frontend\\\\src\\\\containers\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ChatInput as ChatInputBase } from 'components';\nimport { connect } from \"react-redux\";\nimport { messagesActions } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  fetchSendMessage,\n  currentDialogId\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [emojiPickerVisible, setShowEmojiPicker] = useState(false);\n  const toogleEmojiPicker = () => {\n    setShowEmojiPicker(!emojiPickerVisible);\n  };\n  const handleOutsideClick = (el, e) => {\n    if (el && !el.contains(e.target)) {\n      setShowEmojiPicker(false);\n    }\n  };\n  const addEmoji = ({\n    colons\n  }) => {\n    setValue((value + \" \" + colons).trim());\n  };\n  const sendMessage = () => {\n    fetchSendMessage(value, currentDialogId);\n    setValue(\"\");\n  };\n  const handleSendMessage = e => {\n    if (e.key === \"Enter\" && e.shiftKey) {\n      setValue(value => value + \"\\n\");\n    } else if (e.key === \"Enter\" && value.trim() !== \"\") {\n      sendMessage();\n    }\n  };\n  const handleOnKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n    }\n  };\n  useEffect(() => {\n    const el = document.querySelector(\".chat-input__smile-btn\");\n    document.addEventListener(\"click\", handleOutsideClick.bind(this, el));\n    return () => {\n      document.removeEventListener(\"click\", handleOutsideClick.bind(this, el));\n    };\n  });\n  if (!currentDialogId) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(ChatInputBase, {\n    value: value,\n    emojiPickerVisible: emojiPickerVisible,\n    handleSendMessage: handleSendMessage,\n    handleOnKeyDown: handleOnKeyDown,\n    handleOutsideClick: handleOutsideClick,\n    toogleEmojiPicker: toogleEmojiPicker,\n    addEmoji: addEmoji,\n    setValue: setValue,\n    sendMessage: sendMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInput, \"jz42Ch124lfsO7y6WWWUkahj4VI=\");\n_c = ChatInput;\nexport default connect(({\n  dialogs\n}) => dialogs, messagesActions)(ChatInput);\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","useEffect","ChatInput","ChatInputBase","connect","messagesActions","jsxDEV","_jsxDEV","fetchSendMessage","currentDialogId","_s","value","setValue","emojiPickerVisible","setShowEmojiPicker","toogleEmojiPicker","handleOutsideClick","el","e","contains","target","addEmoji","colons","trim","sendMessage","handleSendMessage","key","shiftKey","handleOnKeyDown","preventDefault","document","querySelector","addEventListener","bind","removeEventListener","fileName","_jsxFileName","lineNumber","columnNumber","_c","dialogs","$RefreshReg$"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/containers/ChatInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ChatInput as ChatInputBase } from 'components';\r\nimport { connect } from \"react-redux\"\r\nimport { messagesActions } from \"../redux/actions\"\r\n\r\nconst ChatInput = ({ fetchSendMessage, currentDialogId }) => {\r\n    const [value, setValue] = useState('')\r\n    const [emojiPickerVisible, setShowEmojiPicker] = useState(false)\r\n\r\n    const toogleEmojiPicker = () => {\r\n        setShowEmojiPicker(!emojiPickerVisible)\r\n    }\r\n\r\n    const handleOutsideClick = (el, e) => {\r\n        if (el && !el.contains(e.target)) {\r\n            setShowEmojiPicker(false)\r\n        }\r\n    }\r\n\r\n    const addEmoji = ({ colons }) => {\r\n        setValue((value + \" \" + colons).trim())\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        fetchSendMessage(value, currentDialogId)\r\n        setValue(\"\")\r\n    }\r\n\r\n    const handleSendMessage = (e) => {\r\n        if (e.key === \"Enter\" && e.shiftKey) {\r\n            setValue(value => value + \"\\n\")\r\n        }\r\n        else if (e.key === \"Enter\" && value.trim() !== \"\") {\r\n            sendMessage()\r\n        }\r\n    }\r\n\r\n    const handleOnKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const el = document.querySelector(\".chat-input__smile-btn\")\r\n\r\n        document.addEventListener(\"click\", handleOutsideClick.bind(this, el))\r\n\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleOutsideClick.bind(this, el))\r\n        }\r\n    })\r\n\r\n    if (!currentDialogId) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <ChatInputBase\r\n            value={value}\r\n            emojiPickerVisible={emojiPickerVisible}\r\n            handleSendMessage={handleSendMessage}\r\n            handleOnKeyDown={handleOnKeyDown}\r\n            handleOutsideClick={handleOutsideClick}\r\n            toogleEmojiPicker={toogleEmojiPicker}\r\n            addEmoji={addEmoji}\r\n            setValue={setValue}\r\n            sendMessage={sendMessage}\r\n        >\r\n        </ChatInputBase>\r\n    );\r\n};\r\n\r\nexport default connect(({ dialogs }) => dialogs, messagesActions)(ChatInput);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}