{"ast":null,"code":"var _s = $RefreshSig$();\nimport { withFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\n/* import { useLocation, useNavigate, useParams, } from \"react-router-dom\"; */\n\nimport LoginForm from \"../components/LoginForm\";\nimport validateForm from \"utils/validate\";\nimport { userActions } from \"../../../redux/actions\"; /* не получается \"redux/actions\", ругается на пакет redux */\n\nimport store from \"../../../redux/store\";\n\n/* function withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n      return (\r\n        <Component\r\n          {...props}\r\n          router={{ location, navigate, params }}\r\n        />\r\n      );\r\n    }\r\n  \r\n    return ComponentWithRouterProp;\r\n  } */\n\nconst LoginFormContainer = withFormik({\n  mapPropsToValues: () => ({\n    email: \"\",\n    password: \"\"\n  }),\n  validate: values => {\n    let errors = {};\n    validateForm({\n      isAuth: true,\n      values,\n      errors\n    });\n    return errors;\n  },\n  handleSubmit: _s((values, {\n    setSubmitting,\n    props\n  }) => {\n    _s();\n    const navigate = useNavigate();\n    store.dispatch(userActions.fetchUserLogin(values)).then(({\n      status\n    }) => {\n      if (status === \"success\") {\n        setTimeout(() => {\n          /* props.history.push(\"/\") */\n          navigate(\"/\");\n        }, 50);\n      }\n      setSubmitting(false);\n    });\n  }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  }),\n  displayName: \"LoginForm\"\n})(LoginForm);\nexport default LoginFormContainer;","map":{"version":3,"names":["withFormik","useNavigate","LoginForm","validateForm","userActions","store","LoginFormContainer","mapPropsToValues","email","password","validate","values","errors","isAuth","handleSubmit","_s","setSubmitting","props","navigate","dispatch","fetchUserLogin","then","status","setTimeout","displayName"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/modules/LoginForm/containers/LoginForm.js"],"sourcesContent":["import { withFormik } from \"formik\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n/* import { useLocation, useNavigate, useParams, } from \"react-router-dom\"; */\r\n\r\nimport LoginForm from \"../components/LoginForm\";\r\n\r\nimport validateForm from \"utils/validate\"\r\nimport { userActions } from \"../../../redux/actions\" /* не получается \"redux/actions\", ругается на пакет redux */\r\n\r\nimport store from \"../../../redux/store\"\r\n\r\n/* function withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n      return (\r\n        <Component\r\n          {...props}\r\n          router={{ location, navigate, params }}\r\n        />\r\n      );\r\n    }\r\n  \r\n    return ComponentWithRouterProp;\r\n  } */\r\n\r\nconst LoginFormContainer = withFormik({\r\n    mapPropsToValues: () => (\r\n        {\r\n            email: \"\",\r\n            password: \"\"\r\n        }),\r\n    validate: values => {\r\n        let errors = {}\r\n\r\n        validateForm({ isAuth: true, values, errors })\r\n\r\n        return errors\r\n    },\r\n    handleSubmit: (values, { setSubmitting, props }) => {\r\n        const navigate = useNavigate()\r\n        store.dispatch(userActions.fetchUserLogin(values))\r\n            .then(({ status }) => {\r\n                if (status === \"success\") {\r\n                    setTimeout(() => {\r\n                        /* props.history.push(\"/\") */\r\n                        navigate(\"/\")\r\n                    }, 50)\r\n                }\r\n                setSubmitting(false)\r\n            })\r\n    },\r\n    displayName: \"LoginForm\"\r\n\r\n})(LoginForm);\r\n\r\nexport default LoginFormContainer"],"mappings":";AAAA,SAASA,UAAU,QAAQ,QAAQ;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;;AAEA,OAAOC,SAAS,MAAM,yBAAyB;AAE/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,wBAAwB,EAAC;;AAErD,OAAOC,KAAK,MAAM,sBAAsB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAGN,UAAU,CAAC;EAClCO,gBAAgB,EAAEA,CAAA,MACd;IACIC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EACNC,QAAQ,EAAEC,MAAM,IAAI;IAChB,IAAIC,MAAM,GAAG,CAAC,CAAC;IAEfT,YAAY,CAAC;MAAEU,MAAM,EAAE,IAAI;MAAEF,MAAM;MAAEC;IAAO,CAAC,CAAC;IAE9C,OAAOA,MAAM;EACjB,CAAC;EACDE,YAAY,EAAAC,EAAA,CAAE,CAACJ,MAAM,EAAE;IAAEK,aAAa;IAAEC;EAAM,CAAC,KAAK;IAAAF,EAAA;IAChD,MAAMG,QAAQ,GAAGjB,WAAW,CAAC,CAAC;IAC9BI,KAAK,CAACc,QAAQ,CAACf,WAAW,CAACgB,cAAc,CAACT,MAAM,CAAC,CAAC,CAC7CU,IAAI,CAAC,CAAC;MAAEC;IAAO,CAAC,KAAK;MAClB,IAAIA,MAAM,KAAK,SAAS,EAAE;QACtBC,UAAU,CAAC,MAAM;UACb;UACAL,QAAQ,CAAC,GAAG,CAAC;QACjB,CAAC,EAAE,EAAE,CAAC;MACV;MACAF,aAAa,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC;EACV,CAAC;IAAA,QAXoBf,WAAW;EAAA,EAW/B;EACDuB,WAAW,EAAE;AAEjB,CAAC,CAAC,CAACtB,SAAS,CAAC;AAEb,eAAeI,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}