{"ast":null,"code":"import { withFormik } from 'formik';\nimport RegisterForm from \"../components/RegisterForm\";\nimport validate from \"utils/validate\";\nexport default withFormik({\n  mapPropsToValues: () => ({\n    email: \"\",\n    password: \"\"\n  }),\n  validate: values => {\n    let errors = {};\n\n    /* const keys = Object.keys(values)\r\n    keys.forEach(key => validate[key] && validate[key](errors, values[key])) */\n\n    if (!values.email) {\n      errors.email = \"Введите вашу почту\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9._%+-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = \"Invalid email address\";\n    }\n    if (!values.password) {\n      errors.password = \"Введите пороль\";\n    } else if (!/^.*(?=.{8,})(?=.*[a-zA-Z])(?=.*\\d).*$/i.test(values.password)) {\n      errors.password = \"Слишком легкий пороль\";\n    }\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: \"RegisterForm\"\n})(RegisterForm);","map":{"version":3,"names":["withFormik","RegisterForm","validate","mapPropsToValues","email","password","values","errors","test","handleSubmit","setSubmitting","setTimeout","alert","JSON","stringify","displayName"],"sources":["D:/React/projects/02-second-project/messenger/src/modules/RegisterForm/containers/RegisterForm.js"],"sourcesContent":["import { withFormik } from 'formik';\r\nimport RegisterForm from \"../components/RegisterForm\";\r\nimport validate from \"utils/validate\"\r\n\r\nexport default withFormik({\r\n    mapPropsToValues: () => (\r\n        {\r\n            email: \"\",\r\n            password: \"\"\r\n        }),\r\n    validate: values => {\r\n        let errors = {}\r\n\r\n        /* const keys = Object.keys(values)\r\n        keys.forEach(key => validate[key] && validate[key](errors, values[key])) */\r\n\r\n        if (!values.email) {\r\n            errors.email = \"Введите вашу почту\"\r\n        } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9._%+-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n        ) {\r\n            errors.email = \"Invalid email address\"\r\n        }\r\n\r\n        if (!values.password) {\r\n            errors.password = \"Введите пороль\"\r\n        } else if (!/^.*(?=.{8,})(?=.*[a-zA-Z])(?=.*\\d).*$/i.test(values.password)) {\r\n            errors.password = \"Слишком легкий пороль\"\r\n        }\r\n        return errors\r\n\r\n    },\r\n    handleSubmit: (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2))\r\n            setSubmitting(false)\r\n        }, 1000);\r\n    },\r\n    displayName: \"RegisterForm\"\r\n\r\n})(RegisterForm);"],"mappings":"AAAA,SAASA,UAAU,QAAQ,QAAQ;AACnC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,QAAQ,MAAM,gBAAgB;AAErC,eAAeF,UAAU,CAAC;EACtBG,gBAAgB,EAAEA,CAAA,MACd;IACIC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EACNH,QAAQ,EAAEI,MAAM,IAAI;IAChB,IAAIC,MAAM,GAAG,CAAC,CAAC;;IAEf;AACR;;IAEQ,IAAI,CAACD,MAAM,CAACF,KAAK,EAAE;MACfG,MAAM,CAACH,KAAK,GAAG,oBAAoB;IACvC,CAAC,MAAM,IACH,CAAC,8CAA8C,CAACI,IAAI,CAACF,MAAM,CAACF,KAAK,CAAC,EACpE;MACEG,MAAM,CAACH,KAAK,GAAG,uBAAuB;IAC1C;IAEA,IAAI,CAACE,MAAM,CAACD,QAAQ,EAAE;MAClBE,MAAM,CAACF,QAAQ,GAAG,gBAAgB;IACtC,CAAC,MAAM,IAAI,CAAC,wCAAwC,CAACG,IAAI,CAACF,MAAM,CAACD,QAAQ,CAAC,EAAE;MACxEE,MAAM,CAACF,QAAQ,GAAG,uBAAuB;IAC7C;IACA,OAAOE,MAAM;EAEjB,CAAC;EACDE,YAAY,EAAEA,CAACH,MAAM,EAAE;IAAEI;EAAc,CAAC,KAAK;IACzCC,UAAU,CAAC,MAAM;MACbC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACR,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MACtCI,aAAa,CAAC,KAAK,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EACDK,WAAW,EAAE;AAEjB,CAAC,CAAC,CAACd,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}