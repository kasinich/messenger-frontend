{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\projects\\\\02-second-project\\\\messanger-frontend\\\\src\\\\containers\\\\Dialogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { dialogsActions } from '../redux/actions';\nimport socket from \"core/socket\";\nimport { Dialogs as BaseDialogs } from \"components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dialogs = ({\n  fetchDialogs,\n  setCurrentDialogId,\n  currentDialogId,\n  items,\n  userId\n}) => {\n  _s();\n  const [inputValue, setValue] = useState(\"\");\n  let [filted, setFilteredItems] = useState(Array.from(items));\n  const onChangeInput = value => {\n    setFilteredItems(items.filter(dialog => dialog.user.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0));\n    setValue(value);\n  };\n  useEffect(() => {\n    socket.on(\"SERVER:DIALOG_CREATED\", data => {\n      console.log(data);\n      fetchDialogs();\n    });\n    if (!items.length) {\n      fetchDialogs();\n    } else {\n      setFilteredItems(items);\n    }\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(BaseDialogs, {\n    userId: userId,\n    items: filted,\n    inputValue: inputValue,\n    currentDialogId: currentDialogId,\n    onSearch: onChangeInput\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n_s(Dialogs, \"6Ga7viZSGR7BAQZsPH3oEfktYfY=\");\n_c = Dialogs;\nexport default connect(({\n  dialogs\n}) => dialogs, dialogsActions)(Dialogs);\nvar _c;\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["React","useState","useEffect","connect","dialogsActions","socket","Dialogs","BaseDialogs","jsxDEV","_jsxDEV","fetchDialogs","setCurrentDialogId","currentDialogId","items","userId","_s","inputValue","setValue","filted","setFilteredItems","Array","from","onChangeInput","value","filter","dialog","user","fullname","toLowerCase","indexOf","on","data","console","log","length","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","_c","dialogs","$RefreshReg$"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/containers/Dialogs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { dialogsActions} from '../redux/actions';\r\nimport socket from \"core/socket\"\r\nimport { Dialogs as BaseDialogs } from \"components\"\r\n\r\n\r\nconst Dialogs = ({ fetchDialogs, setCurrentDialogId, currentDialogId, items, userId }) => {\r\n    const [inputValue, setValue] = useState(\"\")\r\n    let [filted, setFilteredItems] = useState(Array.from(items))\r\n\r\n    const onChangeInput = value => {\r\n        setFilteredItems(\r\n            items.filter(\r\n                dialog =>\r\n                    dialog.user.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0\r\n            )\r\n        )\r\n        setValue(value)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on(\"SERVER:DIALOG_CREATED\", (data)=>{\r\n            console.log(data)\r\n            fetchDialogs()\r\n        })\r\n        if (!items.length) {\r\n            fetchDialogs()\r\n        } else {\r\n            setFilteredItems(items)\r\n        }\r\n        \r\n    }, [items])\r\n\r\n    \r\n\r\n    return <BaseDialogs\r\n        userId={userId}\r\n        items={filted}\r\n        inputValue={inputValue}\r\n        currentDialogId={currentDialogId}\r\n        onSearch={onChangeInput}\r\n\r\n    ></BaseDialogs>\r\n};\r\n\r\nexport default connect(({ dialogs }) => dialogs, dialogsActions)(Dialogs)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,aAAa;AAErC,SAASC,cAAc,QAAO,kBAAkB;AAChD,OAAOC,MAAM,MAAM,aAAa;AAChC,SAASC,OAAO,IAAIC,WAAW,QAAQ,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMH,OAAO,GAAGA,CAAC;EAAEI,YAAY;EAAEC,kBAAkB;EAAEC,eAAe;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtF,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC3C,IAAI,CAACiB,MAAM,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAACmB,KAAK,CAACC,IAAI,CAACR,KAAK,CAAC,CAAC;EAE5D,MAAMS,aAAa,GAAGC,KAAK,IAAI;IAC3BJ,gBAAgB,CACZN,KAAK,CAACW,MAAM,CACRC,MAAM,IACFA,MAAM,CAACC,IAAI,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CAAC,IAAI,CAC3E,CACJ,CAAC;IACDX,QAAQ,CAACM,KAAK,CAAC;EACnB,CAAC;EAGDrB,SAAS,CAAC,MAAM;IACZG,MAAM,CAACyB,EAAE,CAAC,uBAAuB,EAAGC,IAAI,IAAG;MACvCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBrB,YAAY,CAAC,CAAC;IAClB,CAAC,CAAC;IACF,IAAI,CAACG,KAAK,CAACqB,MAAM,EAAE;MACfxB,YAAY,CAAC,CAAC;IAClB,CAAC,MAAM;MACHS,gBAAgB,CAACN,KAAK,CAAC;IAC3B;EAEJ,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAIX,oBAAOJ,OAAA,CAACF,WAAW;IACfO,MAAM,EAAEA,MAAO;IACfD,KAAK,EAAEK,MAAO;IACdF,UAAU,EAAEA,UAAW;IACvBJ,eAAe,EAAEA,eAAgB;IACjCuB,QAAQ,EAAEb;EAAc;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEd,CAAC;AACnB,CAAC;AAACxB,EAAA,CAtCIT,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAwCb,eAAeH,OAAO,CAAC,CAAC;EAAEsC;AAAQ,CAAC,KAAKA,OAAO,EAAErC,cAAc,CAAC,CAACE,OAAO,CAAC;AAAA,IAAAkC,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}