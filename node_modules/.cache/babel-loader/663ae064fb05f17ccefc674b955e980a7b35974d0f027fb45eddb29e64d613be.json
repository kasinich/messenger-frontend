{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\projects\\\\02-second-project\\\\messanger-frontend\\\\src\\\\containers\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ChatInput as ChatInputBase } from 'components';\nimport { connect } from \"react-redux\";\nimport { messagesActions } from \"../redux/actions\";\nimport { attachmentsApi } from \"utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  fetchSendMessage,\n  currentDialogId\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [attachments, setAttachments] = useState([]);\n  const [emojiPickerVisible, setShowEmojiPicker] = useState(false);\n  const toogleEmojiPicker = () => {\n    setShowEmojiPicker(!emojiPickerVisible);\n  };\n  const handleOutsideClick = (el, e) => {\n    if (el && !el.contains(e.target)) {\n      setShowEmojiPicker(false);\n    }\n  };\n  const addEmoji = ({\n    colons\n  }) => {\n    setValue((value + \" \" + colons).trim());\n  };\n  const sendMessage = () => {\n    if (value.trim() !== \"\") {\n      fetchSendMessage(value, currentDialogId);\n      setValue(\"\");\n    }\n  };\n  const handleSendMessage = e => {\n    if (e.key === \"Enter\" && e.shiftKey) {\n      setValue(value => value + \"\\n\");\n    } else if (e.key === \"Enter\" && value.trim() !== \"\") {\n      sendMessage();\n    }\n  };\n  const handleOnKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n    }\n  };\n  const onSelectFiles = files => {\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const uid = Math.random(Math.random() * 1000);\n      setAttachments([...attachments, {\n        uid,\n        name: file.name,\n        status: \"uploading\"\n      }]);\n      attachmentsApi.upload(file).then(({\n        data\n      }) => {\n        setAttachments(attachments.map(item => {\n          if (item.uid === uid) {\n            item = {\n              uid: data.file._id,\n              name: data.file.fullname,\n              url: data.file.url,\n              status: \"done\"\n            };\n          }\n          return item;\n        }));\n      });\n    }\n  };\n  useEffect(() => {\n    const el = document.querySelector(\".chat-input__smile-btn\");\n    document.addEventListener(\"click\", handleOutsideClick.bind(this, el));\n    return () => {\n      document.removeEventListener(\"click\", handleOutsideClick.bind(this, el));\n    };\n  });\n  if (!currentDialogId) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(ChatInputBase, {\n    value: value,\n    emojiPickerVisible: emojiPickerVisible,\n    handleSendMessage: handleSendMessage,\n    handleOnKeyDown: handleOnKeyDown,\n    toogleEmojiPicker: toogleEmojiPicker,\n    addEmoji: addEmoji,\n    setValue: setValue,\n    sendMessage: sendMessage,\n    attachments: attachments,\n    onSelectFiles: onSelectFiles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInput, \"zrcupt7FAuHBUv2lQgvOnPkQ6mE=\");\n_c = ChatInput;\nexport default connect(({\n  dialogs\n}) => dialogs, messagesActions)(ChatInput);\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","useEffect","ChatInput","ChatInputBase","connect","messagesActions","attachmentsApi","jsxDEV","_jsxDEV","fetchSendMessage","currentDialogId","_s","value","setValue","attachments","setAttachments","emojiPickerVisible","setShowEmojiPicker","toogleEmojiPicker","handleOutsideClick","el","e","contains","target","addEmoji","colons","trim","sendMessage","handleSendMessage","key","shiftKey","handleOnKeyDown","preventDefault","onSelectFiles","files","i","length","file","uid","Math","random","name","status","upload","then","data","map","item","_id","fullname","url","document","querySelector","addEventListener","bind","removeEventListener","fileName","_jsxFileName","lineNumber","columnNumber","_c","dialogs","$RefreshReg$"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/containers/ChatInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ChatInput as ChatInputBase } from 'components';\r\nimport { connect } from \"react-redux\"\r\nimport { messagesActions } from \"../redux/actions\"\r\nimport { attachmentsApi } from \"utils/api\"\r\n\r\nconst ChatInput = ({ fetchSendMessage, currentDialogId }) => {\r\n    const [value, setValue] = useState('')\r\n    const [attachments, setAttachments] = useState([])\r\n    const [emojiPickerVisible, setShowEmojiPicker] = useState(false)\r\n\r\n    const toogleEmojiPicker = () => {\r\n        setShowEmojiPicker(!emojiPickerVisible)\r\n    }\r\n\r\n    const handleOutsideClick = (el, e) => {\r\n        if (el && !el.contains(e.target)) {\r\n            setShowEmojiPicker(false)\r\n        }\r\n    }\r\n\r\n    const addEmoji = ({ colons }) => {\r\n        setValue((value + \" \" + colons).trim())\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        if (value.trim() !== \"\") {\r\n            fetchSendMessage(value, currentDialogId)\r\n            setValue(\"\")\r\n        }\r\n    }\r\n\r\n    const handleSendMessage = (e) => {\r\n        if (e.key === \"Enter\" && e.shiftKey) {\r\n            setValue(value => value + \"\\n\")\r\n        }\r\n        else if (e.key === \"Enter\" && value.trim() !== \"\") {\r\n            sendMessage()\r\n        }\r\n    }\r\n\r\n    const handleOnKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault()\r\n        }\r\n    }\r\n\r\n    const onSelectFiles = (files) => {\r\n        for (let i = 0; i < files.length; i++) {\r\n            const file = files[i]\r\n            const uid = Math.random(Math.random() * 1000)\r\n            setAttachments([\r\n                ...attachments,\r\n                {\r\n                    uid,\r\n                    name: file.name,\r\n                    status: \"uploading\"\r\n                }\r\n            ])\r\n            attachmentsApi.upload(file)\r\n                .then(({ data }) => {\r\n                    setAttachments(\r\n                        attachments.map(item => {\r\n                            if (item.uid === uid) {\r\n                                item = {\r\n                                    uid: data.file._id,\r\n                                    name: data.file.fullname,\r\n                                    url: data.file.url,\r\n                                    status: \"done\"\r\n                                }\r\n                            }\r\n                            return item\r\n                        })\r\n                    )\r\n                })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const el = document.querySelector(\".chat-input__smile-btn\")\r\n\r\n        document.addEventListener(\"click\", handleOutsideClick.bind(this, el))\r\n\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleOutsideClick.bind(this, el))\r\n        }\r\n    })\r\n\r\n    if (!currentDialogId) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <ChatInputBase\r\n            value={value}\r\n            emojiPickerVisible={emojiPickerVisible}\r\n            handleSendMessage={handleSendMessage}\r\n            handleOnKeyDown={handleOnKeyDown}\r\n            toogleEmojiPicker={toogleEmojiPicker}\r\n            addEmoji={addEmoji}\r\n            setValue={setValue}\r\n            sendMessage={sendMessage}\r\n            attachments={attachments}\r\n            onSelectFiles={onSelectFiles}\r\n        >\r\n        </ChatInputBase>\r\n    );\r\n};\r\n\r\nexport default connect(({ dialogs }) => dialogs, messagesActions)(ChatInput);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}