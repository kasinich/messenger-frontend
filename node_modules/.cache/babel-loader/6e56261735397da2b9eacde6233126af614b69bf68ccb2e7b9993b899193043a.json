{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\projects\\\\02-second-project\\\\messanger-frontend\\\\src\\\\components\\\\ChatInput\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { SmileOutlined, PictureOutlined, AudioOutlined, SendOutlined } from '@ant-design/icons';\nimport { Input, Button } from \"antd\";\nimport { UploadField } from '@navjobs/upload';\nimport { Picker } from 'emoji-mart';\nimport { UploadFiles } from \"components\";\nimport \"./ChatInput.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst ChatInput = props => {\n  _s();\n  const [value, setValue] = useState('');\n  const [emojiPickerVisible, setShowEmojiPicker] = useState(false);\n  const {\n    onSendMessage,\n    currentDialogId\n  } = props;\n  const toogleEmojiPicker = () => {\n    setShowEmojiPicker(!emojiPickerVisible);\n  };\n  const handleSendMessage = e => {\n    if (e.key === \"Enter\" && e.shiftKey) {\n      setValue(value => value + \"\\n\");\n    } else if (e.key === \"Enter\" && value.trim() !== \"\") {\n      onSendMessage(value, currentDialogId);\n      setValue(\"\");\n    }\n  };\n  const handleOnKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n    }\n  };\n  const addEmoji = ({\n    colons\n  }) => {\n    setValue((value + \" \" + colons).trim());\n  };\n  const handleOutsideClick = (el, e) => {\n    if (el && !el.contains(e.target)) {\n      setShowEmojiPicker(false);\n    }\n  };\n  useEffect(() => {\n    const el = document.querySelector(\".chat-input__smile-btn\");\n    document.addEventListener(\"click\", handleOutsideClick.bind(this, el));\n    return () => {\n      document.removeEventListener(\"click\", handleOutsideClick.bind(this, el));\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat__dialog-input\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input__smile-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input__emoji-picker\",\n          children: emojiPickerVisible && /*#__PURE__*/_jsxDEV(Picker, {\n            set: \"google\",\n            emojiSize: 26,\n            style: {\n              width: \"375px\"\n            },\n            onSelect: emojiTag => addEmoji(emojiTag)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"text\",\n          icon: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 43\n          }, this),\n          onClick: toogleEmojiPicker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        size: \"large\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\\u2026\",\n        value: value,\n        autoSize: {\n          minRows: 1,\n          maxRows: 6\n        },\n        onChange: e => setValue(e.target.value),\n        onKeyUp: handleSendMessage,\n        onKeyDown: handleOnKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input__actions\",\n        children: [/*#__PURE__*/_jsxDEV(UploadField, {\n          onFiles: files => {\n            console.log(files);\n          },\n          containerProps: {\n            className: 'chat-input__actions-upload-btn'\n          },\n          uploadProps: {\n            accept: '.jpg,.jpeg,.png,.gif,.bmp',\n            multiple: \"multiple\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"text\",\n            icon: /*#__PURE__*/_jsxDEV(PictureOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(UploadFiles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), value ? /*#__PURE__*/_jsxDEV(Button, {\n          type: \"text\",\n          icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          type: \"text\",\n          icon: /*#__PURE__*/_jsxDEV(AudioOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n};\n_s(ChatInput, \"jz42Ch124lfsO7y6WWWUkahj4VI=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useEffect","useState","classNames","SmileOutlined","PictureOutlined","AudioOutlined","SendOutlined","Input","Button","UploadField","Picker","UploadFiles","jsxDEV","_jsxDEV","TextArea","ChatInput","props","_s","value","setValue","emojiPickerVisible","setShowEmojiPicker","onSendMessage","currentDialogId","toogleEmojiPicker","handleSendMessage","e","key","shiftKey","trim","handleOnKeyDown","preventDefault","addEmoji","colons","handleOutsideClick","el","contains","target","document","querySelector","addEventListener","bind","removeEventListener","className","children","set","emojiSize","style","width","onSelect","emojiTag","fileName","_jsxFileName","lineNumber","columnNumber","type","icon","onClick","size","placeholder","autoSize","minRows","maxRows","onChange","onKeyUp","onKeyDown","onFiles","files","console","log","containerProps","uploadProps","accept","multiple","_c","$RefreshReg$"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/components/ChatInput/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport { SmileOutlined, PictureOutlined, AudioOutlined, SendOutlined } from '@ant-design/icons'\r\nimport { Input, Button } from \"antd\"\r\nimport { UploadField } from '@navjobs/upload'\r\nimport { Picker } from 'emoji-mart'\r\nimport { UploadFiles } from \"components\"\r\n\r\nimport \"./ChatInput.scss\";\r\n\r\nconst { TextArea } = Input\r\n\r\nconst ChatInput = (props) => {\r\n    const [value, setValue] = useState('')\r\n    const [emojiPickerVisible, setShowEmojiPicker] = useState(false)\r\n\r\n    const { onSendMessage, currentDialogId } = props\r\n\r\n    const toogleEmojiPicker = () => {\r\n        setShowEmojiPicker(!emojiPickerVisible)\r\n    }\r\n\r\n    const handleSendMessage = (e) => {\r\n        if (e.key === \"Enter\" && e.shiftKey) {\r\n            setValue(value => value + \"\\n\")\r\n        }\r\n        else if (e.key === \"Enter\" && value.trim() !== \"\") {\r\n            onSendMessage(value, currentDialogId)\r\n            setValue(\"\")\r\n        }\r\n    }\r\n\r\n    const handleOnKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault()\r\n        }\r\n    }\r\n\r\n    const addEmoji = ({ colons }) => {\r\n        setValue((value + \" \" + colons).trim())\r\n    }\r\n\r\n    const handleOutsideClick = (el, e) => {\r\n        if (el && !el.contains(e.target)) {\r\n            setShowEmojiPicker(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const el = document.querySelector(\".chat-input__smile-btn\")\r\n\r\n        document.addEventListener(\"click\", handleOutsideClick.bind(this, el))\r\n\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleOutsideClick.bind(this, el))\r\n        }\r\n    })\r\n\r\n    return <div className=\"chat__dialog-input\">\r\n        <div className=\"chat-input\">\r\n            <div className=\"chat-input__smile-btn\">\r\n                <div className=\"chat-input__emoji-picker\">\r\n                    {emojiPickerVisible && (\r\n                        <Picker\r\n                            set='google'\r\n                            emojiSize={26}\r\n                            style={{\r\n                                width: \"375px\"\r\n                            }}\r\n                            onSelect={(emojiTag) => addEmoji(emojiTag)}\r\n                        ></Picker>\r\n                    )}\r\n                </div>\r\n                <Button type='text' icon={<SmileOutlined />} onClick={toogleEmojiPicker}></Button>\r\n            </div>\r\n            <TextArea\r\n                size='large'\r\n                placeholder=\"Введите текст сообщения…\"\r\n                value={value}\r\n                autoSize={{ minRows: 1, maxRows: 6 }}\r\n                onChange={e => setValue(e.target.value)}\r\n                onKeyUp={handleSendMessage}\r\n                onKeyDown={handleOnKeyDown}\r\n\r\n            />\r\n            <div className=\"chat-input__actions\">\r\n                <UploadField\r\n                    onFiles={files => { console.log(files) }}\r\n                    containerProps={{\r\n                        className: 'chat-input__actions-upload-btn'\r\n                    }}\r\n                    uploadProps={{\r\n                        accept: '.jpg,.jpeg,.png,.gif,.bmp',\r\n                        multiple: \"multiple\"\r\n                    }}\r\n                >\r\n                    <Button type='text' icon={<PictureOutlined />} ></Button>\r\n                </UploadField>\r\n                <UploadFiles></UploadFiles>\r\n                {value ?\r\n                    <Button type='text' icon={<SendOutlined />}></Button>\r\n                    :\r\n                    <Button type='text' icon={<AudioOutlined />}></Button>\r\n                }\r\n            </div>\r\n        </div >\r\n    </div>\r\n}\r\n\r\n\r\nexport default ChatInput; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}