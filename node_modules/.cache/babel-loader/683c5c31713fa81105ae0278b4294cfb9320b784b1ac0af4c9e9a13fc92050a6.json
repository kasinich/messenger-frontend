{"ast":null,"code":"import _asyncToGenerator from \"D:/React/projects/02-second-project/messanger-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"D:\\\\React\\\\projects\\\\02-second-project\\\\messanger-frontend\\\\src\\\\containers\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ChatInput as ChatInputBase } from 'components';\nimport { connect } from \"react-redux\";\nimport { messagesActions } from \"../redux/actions\";\nimport { attachmentsApi } from \"utils/api\";\nimport { fill } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  fetchSendMessage,\n  currentDialogId\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [attachments, setAttachments] = useState([]);\n  const [emojiPickerVisible, setShowEmojiPicker] = useState(false);\n  const toogleEmojiPicker = () => {\n    setShowEmojiPicker(!emojiPickerVisible);\n  };\n  const handleOutsideClick = (el, e) => {\n    if (el && !el.contains(e.target)) {\n      setShowEmojiPicker(false);\n    }\n  };\n  const addEmoji = ({\n    colons\n  }) => {\n    setValue((value + \" \" + colons).trim());\n  };\n  const sendMessage = () => {\n    if (value !== \"\" || attachments) {\n      fetchSendMessage(value, currentDialogId, attachments.map(file => file.uid));\n      setValue(\"\");\n      setAttachments([]);\n    }\n  };\n  const handleSendMessage = e => {\n    if (e.key === \"Enter\" && e.shiftKey) {\n      setValue(value => value + \"\\n\");\n    } else if (e.key === \"Enter\" && value.trim() !== \"\") {\n      sendMessage();\n    }\n  };\n  const handleOnKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n    }\n  };\n  const onSelectFiles = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (files) {\n      let uploaded = [];\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const uid = Math.round(Math.random() * 1000);\n        uploaded = [...uploaded, {\n          uid,\n          name: file.name,\n          status: \"uploading\"\n        }];\n        setAttachments(uploaded);\n        yield attachmentsApi.upload(file).then(({\n          data\n        }) => {\n          uploaded = uploaded.map(item => {\n            if (item.uid === uid) {\n              return {\n                status: \"done\",\n                uid: data.file._id,\n                name: data.file.filename,\n                url: data.file.url\n              };\n            }\n            return item;\n          });\n        });\n      }\n      setAttachments(uploaded);\n    });\n    return function onSelectFiles(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(() => {\n    const el = document.querySelector(\".chat-input__smile-btn\");\n    document.addEventListener(\"click\", handleOutsideClick.bind(this, el));\n    return () => {\n      document.removeEventListener(\"click\", handleOutsideClick.bind(this, el));\n    };\n  });\n  if (!currentDialogId) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(ChatInputBase, {\n    value: value,\n    emojiPickerVisible: emojiPickerVisible,\n    handleSendMessage: handleSendMessage,\n    handleOnKeyDown: handleOnKeyDown,\n    toogleEmojiPicker: toogleEmojiPicker,\n    addEmoji: addEmoji,\n    setValue: setValue,\n    sendMessage: sendMessage,\n    attachments: attachments,\n    onSelectFiles: onSelectFiles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInput, \"zrcupt7FAuHBUv2lQgvOnPkQ6mE=\");\n_c = ChatInput;\nexport default connect(({\n  dialogs\n}) => dialogs, messagesActions)(ChatInput);\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","useEffect","ChatInput","ChatInputBase","connect","messagesActions","attachmentsApi","fill","jsxDEV","_jsxDEV","fetchSendMessage","currentDialogId","_s","value","setValue","attachments","setAttachments","emojiPickerVisible","setShowEmojiPicker","toogleEmojiPicker","handleOutsideClick","el","e","contains","target","addEmoji","colons","trim","sendMessage","map","file","uid","handleSendMessage","key","shiftKey","handleOnKeyDown","preventDefault","onSelectFiles","_ref","_asyncToGenerator","files","uploaded","i","length","Math","round","random","name","status","upload","then","data","item","_id","filename","url","_x","apply","arguments","document","querySelector","addEventListener","bind","removeEventListener","fileName","_jsxFileName","lineNumber","columnNumber","_c","dialogs","$RefreshReg$"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/containers/ChatInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ChatInput as ChatInputBase } from 'components';\r\nimport { connect } from \"react-redux\"\r\nimport { messagesActions } from \"../redux/actions\"\r\nimport { attachmentsApi } from \"utils/api\"\r\nimport { fill } from 'lodash';\r\n\r\nconst ChatInput = ({ fetchSendMessage, currentDialogId }) => {\r\n    const [value, setValue] = useState('')\r\n    const [attachments, setAttachments] = useState([])\r\n    const [emojiPickerVisible, setShowEmojiPicker] = useState(false)\r\n\r\n    const toogleEmojiPicker = () => {\r\n        setShowEmojiPicker(!emojiPickerVisible)\r\n    }\r\n\r\n    const handleOutsideClick = (el, e) => {\r\n        if (el && !el.contains(e.target)) {\r\n            setShowEmojiPicker(false)\r\n        }\r\n    }\r\n\r\n    const addEmoji = ({ colons }) => {\r\n        setValue((value + \" \" + colons).trim())\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        if (value !== \"\" || attachments) {\r\n            fetchSendMessage(value, currentDialogId, attachments.map(file => file.uid))\r\n            setValue(\"\")\r\n            setAttachments([])\r\n        }\r\n    }\r\n\r\n    const handleSendMessage = (e) => {\r\n        if (e.key === \"Enter\" && e.shiftKey) {\r\n            setValue(value => value + \"\\n\")\r\n        }\r\n        else if (e.key === \"Enter\" && value.trim() !== \"\") {\r\n            sendMessage()\r\n        }\r\n    }\r\n\r\n    const handleOnKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault()\r\n        }\r\n    }\r\n\r\n    const onSelectFiles = async files => {\r\n        let uploaded = [];\r\n        for (let i = 0; i < files.length; i++) {\r\n            const file = files[i];\r\n            const uid = Math.round(Math.random() * 1000);\r\n            uploaded = [\r\n                ...uploaded,\r\n                {\r\n                    uid,\r\n                    name: file.name,\r\n                    status: \"uploading\"\r\n                }\r\n            ];\r\n            setAttachments(uploaded);\r\n\r\n            await attachmentsApi.upload(file).then(({ data }) => {\r\n                uploaded = uploaded.map(item => {\r\n                    if (item.uid === uid) {\r\n                        return {\r\n                            status: \"done\",\r\n                            uid: data.file._id,\r\n                            name: data.file.filename,\r\n                            url: data.file.url\r\n                        };\r\n                    }\r\n                    return item;\r\n                });\r\n            });\r\n        }\r\n        setAttachments(uploaded);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const el = document.querySelector(\".chat-input__smile-btn\")\r\n\r\n        document.addEventListener(\"click\", handleOutsideClick.bind(this, el))\r\n\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleOutsideClick.bind(this, el))\r\n        }\r\n    })\r\n\r\n    if (!currentDialogId) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <ChatInputBase\r\n            value={value}\r\n            emojiPickerVisible={emojiPickerVisible}\r\n            handleSendMessage={handleSendMessage}\r\n            handleOnKeyDown={handleOnKeyDown}\r\n            toogleEmojiPicker={toogleEmojiPicker}\r\n            addEmoji={addEmoji}\r\n            setValue={setValue}\r\n            sendMessage={sendMessage}\r\n            attachments={attachments}\r\n            onSelectFiles={onSelectFiles}\r\n        >\r\n        </ChatInputBase>\r\n    );\r\n};\r\n\r\nexport default connect(({ dialogs }) => dialogs, messagesActions)(ChatInput);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}