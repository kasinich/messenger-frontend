{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\projects\\\\02-second-project\\\\messanger-frontend\\\\src\\\\components\\\\Messages\\\\index.js\";\nimport React from 'react';\nimport propTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport { Message } from \"components\";\nimport { Empty, Spin } from \"antd\";\nimport \"./Messages.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst Messages = ({\n  onRemoveMessage,\n  blockRef,\n  items,\n  user,\n  isLoading\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: blockRef,\n    className: classNames(\"messages\", {\n      \"messages--loading\": isLoading\n    }),\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this) : items && !isLoading ? items.length > 0 ? items.map(item => /*#__PURE__*/_createElement(Message, {\n      ...item,\n      key: item._id,\n      isMe: user._id === item.user._id,\n      onRemoveMessage: onRemoveMessage.bind(this, item._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }\n    })) : /*#__PURE__*/_jsxDEV(Empty, {\n      description: \"\\u0414\\u0438\\u0430\\u043B\\u043E\\u0433 \\u043F\\u0443\\u0441\\u0442\\u043E\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Empty, {\n      description: \"\\u041E\\u0442\\u043A\\u0440\\u043E\\u0439\\u0442\\u0435 \\u0434\\u0438\\u0430\\u043B\\u043E\\u0433\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = Messages;\nMessages.propTypes = {\n  items: propTypes.array\n};\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","propTypes","classNames","Message","Empty","Spin","jsxDEV","_jsxDEV","createElement","_createElement","Messages","onRemoveMessage","blockRef","items","user","isLoading","ref","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","key","_id","isMe","bind","__self","__source","description","_c","array","$RefreshReg$"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/components/Messages/index.js"],"sourcesContent":["import React from 'react';\r\nimport propTypes from \"prop-types\"\r\nimport classNames from 'classnames';\r\nimport { Message } from \"components\"\r\nimport { Empty, Spin } from \"antd\"\r\n\r\nimport \"./Messages.scss\"\r\n\r\nconst Messages = ({ onRemoveMessage, blockRef, items, user, isLoading }) => {\r\n    return (\r\n        <div ref={blockRef} className={classNames(\"messages\", { \"messages--loading\": isLoading })}>\r\n            {isLoading ? (\r\n                <Spin size='large'></Spin>\r\n            ) : items && !isLoading ? (\r\n                items.length > 0 ? (\r\n                    items.map(item => (\r\n                        <Message\r\n                            {...item}\r\n                            key={item._id}\r\n                            isMe={user._id === item.user._id}\r\n                            onRemoveMessage={onRemoveMessage.bind(this, item._id)}\r\n                        ></Message>\r\n                    ))\r\n                ) : (\r\n                    <Empty description=\"Диалог пустой\" />\r\n                )\r\n            ) : (\r\n                <Empty description=\"Откройте диалог\" />\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nMessages.propTypes = {\r\n    items: propTypes.array\r\n}\r\n\r\nexport default Messages;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,KAAK,EAAEC,IAAI,QAAQ,MAAM;AAElC,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,aAAA,IAAAC,cAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,eAAe;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,IAAI;EAAEC;AAAU,CAAC,KAAK;EACxE,oBACIR,OAAA;IAAKS,GAAG,EAAEJ,QAAS;IAACK,SAAS,EAAEf,UAAU,CAAC,UAAU,EAAE;MAAE,mBAAmB,EAAEa;IAAU,CAAC,CAAE;IAAAG,QAAA,EACrFH,SAAS,gBACNR,OAAA,CAACF,IAAI;MAACc,IAAI,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,GAC1BV,KAAK,IAAI,CAACE,SAAS,GACnBF,KAAK,CAACW,MAAM,GAAG,CAAC,GACZX,KAAK,CAACY,GAAG,CAACC,IAAI,iBACVjB,cAAA,CAACN,OAAO;MAAA,GACAuB,IAAI;MACRC,GAAG,EAAED,IAAI,CAACE,GAAI;MACdC,IAAI,EAAEf,IAAI,CAACc,GAAG,KAAKF,IAAI,CAACZ,IAAI,CAACc,GAAI;MACjCjB,eAAe,EAAEA,eAAe,CAACmB,IAAI,CAAC,IAAI,EAAEJ,IAAI,CAACE,GAAG,CAAE;MAAAG,MAAA;MAAAC,QAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAChD,CACb,CAAC,gBAEFhB,OAAA,CAACH,KAAK;MAAC6B,WAAW,EAAC;IAAe;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACvC,gBAEDhB,OAAA,CAACH,KAAK;MAAC6B,WAAW,EAAC;IAAiB;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACzC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEd,CAAC;AAAAW,EAAA,GAxBKxB,QAAQ;AA0BdA,QAAQ,CAACT,SAAS,GAAG;EACjBY,KAAK,EAAEZ,SAAS,CAACkC;AACrB,CAAC;AAED,eAAezB,QAAQ;AAAC,IAAAwB,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}