{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\projects\\\\02-second-project\\\\messanger-frontend\\\\src\\\\containers\\\\Messages.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { messagesActions } from '../redux/actions';\nimport { Messages as BaseMessages } from \"components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Messages extends React.Component {\n  componentDidUpdate(prevProps) {\n    const {\n      fetchMessages,\n      currentDialogId\n    } = this.props;\n    if (prevProps.currentDialogId !== currentDialogId) {\n      fetchMessages(currentDialogId);\n    }\n  }\n  render() {\n    const {\n      items\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(BaseMessages, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n/* const Messages = ({ currentDialogId, fetchMessages, items }) => {\r\n    useEffect(() => {\r\n        fetchMessages(currentDialogId)\r\n    }, [currentDialogId])\r\n\r\n    return <BaseMessages\r\n        items={items}\r\n    ></BaseMessages>\r\n}; */\n\nexport default connect(({\n  dialogs,\n  messages\n}) => ({\n  currentDialogId: dialogs.currentDialogId,\n  items: messages.items\n}), messagesActions)(Messages);","map":{"version":3,"names":["React","useEffect","connect","messagesActions","Messages","BaseMessages","jsxDEV","_jsxDEV","Component","componentDidUpdate","prevProps","fetchMessages","currentDialogId","props","render","items","fileName","_jsxFileName","lineNumber","columnNumber","dialogs","messages"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/containers/Messages.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { messagesActions } from '../redux/actions';\r\nimport { Messages as BaseMessages } from \"components\"\r\n\r\nclass Messages extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        const { fetchMessages, currentDialogId } = this.props\r\n            if (prevProps.currentDialogId !== currentDialogId) {\r\n            fetchMessages(currentDialogId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.props\r\n        return <BaseMessages\r\n            items={items}\r\n        ></BaseMessages>\r\n    }\r\n}\r\n\r\n\r\n/* const Messages = ({ currentDialogId, fetchMessages, items }) => {\r\n    useEffect(() => {\r\n        fetchMessages(currentDialogId)\r\n    }, [currentDialogId])\r\n\r\n    return <BaseMessages\r\n        items={items}\r\n    ></BaseMessages>\r\n}; */\r\n\r\nexport default connect(({ dialogs, messages }) => ({\r\n    currentDialogId: dialogs.currentDialogId,\r\n    items: messages.items\r\n}),\r\n    messagesActions\r\n)(Messages)"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AAErC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,QAAQ,IAAIC,YAAY,QAAQ,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMH,QAAQ,SAASJ,KAAK,CAACQ,SAAS,CAAC;EACnCC,kBAAkBA,CAACC,SAAS,EAAE;IAC1B,MAAM;MAAEC,aAAa;MAAEC;IAAgB,CAAC,GAAG,IAAI,CAACC,KAAK;IACjD,IAAIH,SAAS,CAACE,eAAe,KAAKA,eAAe,EAAE;MACnDD,aAAa,CAACC,eAAe,CAAC;IAClC;EACJ;EAEAE,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACF,KAAK;IAC5B,oBAAON,OAAA,CAACF,YAAY;MAChBU,KAAK,EAAEA;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EACpB;AACJ;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAejB,OAAO,CAAC,CAAC;EAAEkB,OAAO;EAAEC;AAAS,CAAC,MAAM;EAC/CT,eAAe,EAAEQ,OAAO,CAACR,eAAe;EACxCG,KAAK,EAAEM,QAAQ,CAACN;AACpB,CAAC,CAAC,EACEZ,eACJ,CAAC,CAACC,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}