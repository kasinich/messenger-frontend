{"ast":null,"code":"var _s = $RefreshSig$();\nimport { withFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoginForm from \"../components/LoginForm\";\nimport validateForm from \"utils/validate\";\nimport { userActions } from \"../../../redux/actions\"; /* не получается \"redux/actions\", ругается на пакет redux */\n\nimport store from \"../../../redux/store\";\nconst useRedirect = () => {\n  _s();\n  const navigate = useNavigate();\n  return navigate;\n};\n_s(useRedirect, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\nconst LoginFormContainer = withFormik({\n  mapPropsToValues: () => ({\n    email: \"\",\n    password: \"\"\n  }),\n  validate: values => {\n    let errors = {};\n    validateForm({\n      isAuth: true,\n      values,\n      errors\n    });\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    store.dispatch(userActions.fetchUserLogin(values)).then(({\n      status\n    }) => {\n      if (status === \"success\") {\n        setTimeout(() => {\n          redirectTo(\"/\");\n        }, 50);\n      }\n      setSubmitting(false);\n    });\n  },\n  displayName: \"LoginForm\"\n})(LoginForm);\nexport default LoginFormContainer;","map":{"version":3,"names":["withFormik","useNavigate","LoginForm","validateForm","userActions","store","useRedirect","_s","navigate","LoginFormContainer","mapPropsToValues","email","password","validate","values","errors","isAuth","handleSubmit","setSubmitting","dispatch","fetchUserLogin","then","status","setTimeout","redirectTo","displayName"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/modules/LoginForm/containers/LoginForm.js"],"sourcesContent":["import { withFormik } from \"formik\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport LoginForm from \"../components/LoginForm\";\r\n\r\nimport validateForm from \"utils/validate\"\r\nimport { userActions } from \"../../../redux/actions\" /* не получается \"redux/actions\", ругается на пакет redux */\r\n\r\nimport store from \"../../../redux/store\"\r\n\r\nconst useRedirect = () => {\r\n    const navigate = useNavigate();\r\n    return navigate;\r\n};\r\n\r\nconst LoginFormContainer = withFormik({\r\n    mapPropsToValues: () => (\r\n        {\r\n            email: \"\",\r\n            password: \"\"\r\n        }),\r\n    validate: values => {\r\n        let errors = {}\r\n\r\n        validateForm({ isAuth: true, values, errors })\r\n\r\n        return errors\r\n    },\r\n    handleSubmit: (values, { setSubmitting }) => {\r\n        store.dispatch(userActions.fetchUserLogin(values))\r\n            .then(({ status }) => {\r\n                if (status === \"success\") {\r\n                    setTimeout(() => {\r\n                        redirectTo(\"/\")\r\n                    }, 50)\r\n                }\r\n                setSubmitting(false)\r\n            })\r\n    },\r\n    displayName: \"LoginForm\"\r\n\r\n})(LoginForm);\r\n\r\nexport default LoginFormContainer"],"mappings":";AAAA,SAASA,UAAU,QAAQ,QAAQ;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,SAAS,MAAM,yBAAyB;AAE/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,wBAAwB,EAAC;;AAErD,OAAOC,KAAK,MAAM,sBAAsB;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,OAAOO,QAAQ;AACnB,CAAC;AAACD,EAAA,CAHID,WAAW;EAAA,QACIL,WAAW;AAAA;AAIhC,MAAMQ,kBAAkB,GAAGT,UAAU,CAAC;EAClCU,gBAAgB,EAAEA,CAAA,MACd;IACIC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EACNC,QAAQ,EAAEC,MAAM,IAAI;IAChB,IAAIC,MAAM,GAAG,CAAC,CAAC;IAEfZ,YAAY,CAAC;MAAEa,MAAM,EAAE,IAAI;MAAEF,MAAM;MAAEC;IAAO,CAAC,CAAC;IAE9C,OAAOA,MAAM;EACjB,CAAC;EACDE,YAAY,EAAEA,CAACH,MAAM,EAAE;IAAEI;EAAc,CAAC,KAAK;IACzCb,KAAK,CAACc,QAAQ,CAACf,WAAW,CAACgB,cAAc,CAACN,MAAM,CAAC,CAAC,CAC7CO,IAAI,CAAC,CAAC;MAAEC;IAAO,CAAC,KAAK;MAClB,IAAIA,MAAM,KAAK,SAAS,EAAE;QACtBC,UAAU,CAAC,MAAM;UACbC,UAAU,CAAC,GAAG,CAAC;QACnB,CAAC,EAAE,EAAE,CAAC;MACV;MACAN,aAAa,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC;EACV,CAAC;EACDO,WAAW,EAAE;AAEjB,CAAC,CAAC,CAACvB,SAAS,CAAC;AAEb,eAAeO,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}