{"ast":null,"code":"import _asyncToGenerator from \"D:/React/projects/02-second-project/messanger-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"D:\\\\React\\\\projects\\\\02-second-project\\\\messanger-frontend\\\\src\\\\containers\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ChatInput as ChatInputBase } from 'components';\nimport { connect } from \"react-redux\";\nimport { messagesActions } from \"../redux/actions\";\nimport { attachmentsApi } from \"utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  fetchSendMessage,\n  currentDialogId\n}) => {\n  _s();\n  window.navigator.getUserMedia = window.navigator.getUserMedia || window.navigator.mozGetUserMedia || window.navigator.msGetUserMedia || window.navigator.webkitGetUserMedia;\n  const [value, setValue] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(\"\");\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [attachments, setAttachments] = useState([]);\n  const [emojiPickerVisible, setShowEmojiPicker] = useState(false);\n  const toogleEmojiPicker = () => {\n    setShowEmojiPicker(!emojiPickerVisible);\n  };\n  const handleOutsideClick = (el, e) => {\n    if (el && !el.contains(e.target)) {\n      setShowEmojiPicker(false);\n    }\n  };\n  const addEmoji = ({\n    colons\n  }) => {\n    setValue((value + \" \" + colons).trim());\n  };\n  const sendMessage = () => {\n    if ((value.trim() !== \"\" || attachments.length > 0) && currentDialogId) {\n      fetchSendMessage({\n        text: value,\n        dialogId: currentDialogId,\n        attachments: attachments.map(file => file.uid)\n      });\n      setValue(\"\");\n      setAttachments([]);\n    } else if (attachments.length > 0 && !value.trim()) {\n      fetchSendMessage({\n        text: \"\",\n        dialogId: currentDialogId,\n        attachments: attachments.map(file => file.uid)\n      });\n      setAttachments([]);\n    }\n  };\n  const handleSendMessage = e => {\n    if (e.key === \"Enter\" && e.shiftKey) {\n      setValue(value => value + \"\\n\");\n    } else if (e.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n  const handleOnKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n    }\n  };\n  const onRecord = () => {\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia({\n        audio: true\n      }, onRecording, onError);\n    }\n  };\n  const onRecording = stream => {\n    const recorder = new MediaRecorder(stream);\n    setMediaRecorder(recorder);\n    recorder.start();\n    recorder.onstart = () => {\n      setIsRecording(true);\n    };\n    recorder.onstop = () => {\n      setIsRecording(false);\n    };\n    recorder.ondataavailable = e => {\n      const file = new File([e.data], \"audio.webm\");\n      attachmentsApi.upload(file).then(({\n        data\n      }) => {\n        console.log(data);\n      });\n    };\n  };\n  const onError = err => {\n    console.log(\"The following error occured: \" + err);\n  };\n  const handleStartRecording = () => {\n    setIsRecording(true);\n  };\n  const onStopRecording = () => {\n    mediaRecorder.stop();\n  };\n  const onSelectFiles = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (files) {\n      let uploaded = [];\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const uid = Math.round(Math.random() * 1000);\n        uploaded = [...uploaded, {\n          uid,\n          name: file.name,\n          status: \"uploading\"\n        }];\n        setAttachments(uploaded);\n        yield attachmentsApi.upload(file).then(({\n          data\n        }) => {\n          uploaded = uploaded.map(item => {\n            if (item.uid === uid) {\n              return {\n                status: \"done\",\n                uid: data.file._id,\n                name: data.file.filename,\n                url: data.file.url\n              };\n            }\n            return item;\n          });\n        });\n      }\n      setAttachments(uploaded);\n    });\n    return function onSelectFiles(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(() => {\n    const el = document.querySelector(\".chat-input__smile-btn\");\n    document.addEventListener(\"click\", handleOutsideClick.bind(this, el));\n    return () => {\n      document.removeEventListener(\"click\", handleOutsideClick.bind(this, el));\n    };\n  });\n  if (!currentDialogId) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(ChatInputBase, {\n    value: value,\n    emojiPickerVisible: emojiPickerVisible,\n    handleSendMessage: handleSendMessage,\n    handleOnKeyDown: handleOnKeyDown,\n    toogleEmojiPicker: toogleEmojiPicker,\n    addEmoji: addEmoji,\n    setValue: setValue,\n    sendMessage: sendMessage,\n    attachments: attachments,\n    onSelectFiles: onSelectFiles,\n    onStopRecording: onStopRecording,\n    onRecord: onRecord,\n    isRecording: isRecording\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInput, \"sMIQvoERnZ+BmrQgK0vL3hmlNWc=\");\n_c = ChatInput;\nexport default connect(({\n  dialogs\n}) => dialogs, messagesActions)(ChatInput);\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","useEffect","ChatInput","ChatInputBase","connect","messagesActions","attachmentsApi","jsxDEV","_jsxDEV","fetchSendMessage","currentDialogId","_s","window","navigator","getUserMedia","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","value","setValue","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","attachments","setAttachments","emojiPickerVisible","setShowEmojiPicker","toogleEmojiPicker","handleOutsideClick","el","e","contains","target","addEmoji","colons","trim","sendMessage","length","text","dialogId","map","file","uid","handleSendMessage","key","shiftKey","handleOnKeyDown","preventDefault","onRecord","audio","onRecording","onError","stream","recorder","MediaRecorder","start","onstart","onstop","ondataavailable","File","data","upload","then","console","log","err","handleStartRecording","onStopRecording","stop","onSelectFiles","_ref","_asyncToGenerator","files","uploaded","i","Math","round","random","name","status","item","_id","filename","url","_x","apply","arguments","document","querySelector","addEventListener","bind","removeEventListener","fileName","_jsxFileName","lineNumber","columnNumber","_c","dialogs","$RefreshReg$"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/containers/ChatInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ChatInput as ChatInputBase } from 'components';\r\nimport { connect } from \"react-redux\"\r\nimport { messagesActions } from \"../redux/actions\"\r\nimport { attachmentsApi } from \"utils/api\"\r\n\r\nconst ChatInput = ({ fetchSendMessage, currentDialogId }) => {\r\n    window.navigator.getUserMedia =\r\n        window.navigator.getUserMedia ||\r\n        window.navigator.mozGetUserMedia ||\r\n        window.navigator.msGetUserMedia ||\r\n        window.navigator.webkitGetUserMedia\r\n\r\n    const [value, setValue] = useState(\"\")\r\n    const [isRecording, setIsRecording] = useState(\"\")\r\n    const [mediaRecorder, setMediaRecorder] = useState(null)\r\n    const [attachments, setAttachments] = useState([])\r\n    const [emojiPickerVisible, setShowEmojiPicker] = useState(false)\r\n\r\n    const toogleEmojiPicker = () => {\r\n        setShowEmojiPicker(!emojiPickerVisible)\r\n    }\r\n\r\n    const handleOutsideClick = (el, e) => {\r\n        if (el && !el.contains(e.target)) {\r\n            setShowEmojiPicker(false)\r\n        }\r\n    }\r\n\r\n    const addEmoji = ({ colons }) => {\r\n        setValue((value + \" \" + colons).trim())\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        if ((value.trim() !== \"\" || attachments.length > 0) && currentDialogId) {\r\n            fetchSendMessage({\r\n                text: value,\r\n                dialogId: currentDialogId,\r\n                attachments: attachments.map(file => file.uid)\r\n            })\r\n            setValue(\"\")\r\n            setAttachments([])\r\n        } else if (attachments.length > 0 && !value.trim()) {\r\n            fetchSendMessage({\r\n                text: \"\",\r\n                dialogId: currentDialogId,\r\n                attachments: attachments.map(file => file.uid)\r\n            })\r\n            setAttachments([])\r\n        }\r\n    }\r\n\r\n    const handleSendMessage = (e) => {\r\n        if (e.key === \"Enter\" && e.shiftKey) {\r\n            setValue(value => value + \"\\n\")\r\n        }\r\n        else if (e.key === \"Enter\") {\r\n            sendMessage()\r\n        }\r\n    }\r\n\r\n    const handleOnKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault()\r\n        }\r\n    }\r\n\r\n    const onRecord = () => {\r\n        if (navigator.getUserMedia) {\r\n            navigator.getUserMedia({ audio: true }, onRecording, onError)\r\n        }\r\n    }\r\n\r\n    const onRecording = (stream) => {\r\n        const recorder = new MediaRecorder(stream);\r\n        setMediaRecorder(recorder)\r\n        recorder.start()\r\n\r\n        recorder.onstart = () => {\r\n            setIsRecording(true)\r\n        }\r\n\r\n        recorder.onstop = () => {\r\n            setIsRecording(false)\r\n        }\r\n\r\n        recorder.ondataavailable = (e) => {\r\n            const file = new File([e.data], \"audio.webm\")\r\n            attachmentsApi.upload(file).then(({ data }) => {\r\n                console.log(data)\r\n            })\r\n        }\r\n    }\r\n\r\n    const onError = err => {\r\n        console.log(\"The following error occured: \" + err)\r\n    };\r\n\r\n    const handleStartRecording = () => {\r\n        setIsRecording(true)\r\n    }\r\n\r\n    const onStopRecording = () => {\r\n        mediaRecorder.stop()\r\n    }\r\n\r\n    const onSelectFiles = async files => {\r\n        let uploaded = [];\r\n        for (let i = 0; i < files.length; i++) {\r\n            const file = files[i];\r\n            const uid = Math.round(Math.random() * 1000);\r\n            uploaded = [\r\n                ...uploaded,\r\n                {\r\n                    uid,\r\n                    name: file.name,\r\n                    status: \"uploading\"\r\n                }\r\n            ];\r\n            setAttachments(uploaded);\r\n\r\n            await attachmentsApi.upload(file).then(({ data }) => {\r\n                uploaded = uploaded.map(item => {\r\n                    if (item.uid === uid) {\r\n                        return {\r\n                            status: \"done\",\r\n                            uid: data.file._id,\r\n                            name: data.file.filename,\r\n                            url: data.file.url\r\n                        };\r\n                    }\r\n                    return item;\r\n                });\r\n            });\r\n        }\r\n        setAttachments(uploaded);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const el = document.querySelector(\".chat-input__smile-btn\")\r\n\r\n        document.addEventListener(\"click\", handleOutsideClick.bind(this, el))\r\n\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleOutsideClick.bind(this, el))\r\n        }\r\n    })\r\n\r\n    if (!currentDialogId) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <ChatInputBase\r\n            value={value}\r\n            emojiPickerVisible={emojiPickerVisible}\r\n            handleSendMessage={handleSendMessage}\r\n            handleOnKeyDown={handleOnKeyDown}\r\n            toogleEmojiPicker={toogleEmojiPicker}\r\n            addEmoji={addEmoji}\r\n            setValue={setValue}\r\n            sendMessage={sendMessage}\r\n            attachments={attachments}\r\n            onSelectFiles={onSelectFiles}\r\n            onStopRecording={onStopRecording}\r\n            onRecord={onRecord}\r\n            isRecording={isRecording}\r\n        >\r\n        </ChatInputBase>\r\n    );\r\n};\r\n\r\nexport default connect(({ dialogs }) => dialogs, messagesActions)(ChatInput);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}