{"ast":null,"code":"import { userApi } from \"utils/api\";\nimport { openNotification } from \"utils/helpers\";\nconst actions = {\n  setUserData: data => ({\n    type: \"USER:SET_DATA\",\n    payload: data\n  }),\n  fetchUserLogin: postData => dispatch => {\n    return userApi.login(postData).then(({\n      data\n    }) => {\n      const {\n        status,\n        token\n      } = data;\n      if (status === \"error\") {\n        openNotification({\n          title: \"Ошибка при авторизации\",\n          text: \"Неверный логин или пароль.\",\n          type: \"error\"\n        });\n      } else {\n        openNotification({\n          title: \"Отлично!\",\n          text: \"Авторизация успешна.\",\n          type: \"success\"\n        });\n      }\n      dispatch(actions.setUserData(data));\n    });\n  }\n};\nexport default actions;","map":{"version":3,"names":["userApi","openNotification","actions","setUserData","data","type","payload","fetchUserLogin","postData","dispatch","login","then","status","token","title","text"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/redux/actions/user.js"],"sourcesContent":["import { userApi } from \"utils/api\";\r\nimport { openNotification } from \"utils/helpers\";\r\n\r\nconst actions = {\r\n    setUserData: data => ({\r\n        type: \"USER:SET_DATA\",\r\n        payload: data\r\n    }),\r\n    fetchUserLogin: (postData)=> dispatch => {\r\n        return userApi.login(postData)\r\n        .then(({data}) => {\r\n            const { status, token } = data\r\n            if (status === \"error\") {\r\n                openNotification({\r\n                    title: \"Ошибка при авторизации\",\r\n                    text: \"Неверный логин или пароль.\",\r\n                    type: \"error\"\r\n                })\r\n            } else {\r\n                openNotification({\r\n                    title: \"Отлично!\",\r\n                    text: \"Авторизация успешна.\",\r\n                    type: \"success\"\r\n                })\r\n            }\r\n            dispatch(actions.setUserData(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport default actions"],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;AACnC,SAASC,gBAAgB,QAAQ,eAAe;AAEhD,MAAMC,OAAO,GAAG;EACZC,WAAW,EAAEC,IAAI,KAAK;IAClBC,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAEF;EACb,CAAC,CAAC;EACFG,cAAc,EAAGC,QAAQ,IAAIC,QAAQ,IAAI;IACrC,OAAOT,OAAO,CAACU,KAAK,CAACF,QAAQ,CAAC,CAC7BG,IAAI,CAAC,CAAC;MAACP;IAAI,CAAC,KAAK;MACd,MAAM;QAAEQ,MAAM;QAAEC;MAAM,CAAC,GAAGT,IAAI;MAC9B,IAAIQ,MAAM,KAAK,OAAO,EAAE;QACpBX,gBAAgB,CAAC;UACba,KAAK,EAAE,wBAAwB;UAC/BC,IAAI,EAAE,4BAA4B;UAClCV,IAAI,EAAE;QACV,CAAC,CAAC;MACN,CAAC,MAAM;QACHJ,gBAAgB,CAAC;UACba,KAAK,EAAE,UAAU;UACjBC,IAAI,EAAE,sBAAsB;UAC5BV,IAAI,EAAE;QACV,CAAC,CAAC;MACN;MACAI,QAAQ,CAACP,OAAO,CAACC,WAAW,CAACC,IAAI,CAAC,CAAC;IACvC,CAAC,CAAC;EACN;AACJ,CAAC;AAED,eAAeF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}