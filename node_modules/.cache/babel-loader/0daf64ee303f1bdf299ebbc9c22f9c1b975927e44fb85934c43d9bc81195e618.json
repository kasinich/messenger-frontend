{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\projects\\\\02-second-project\\\\messanger-frontend\\\\src\\\\modules\\\\LoginForm\\\\containers\\\\LoginForm.js\";\nimport { withFormik } from \"formik\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/LoginForm\";\nimport validateForm from \"utils/validate\";\nimport { userActions } from \"../../../redux/actions\"; /* не получается \"redux/actions\", ругается на пакет redux */\n\nimport store from \"../../../redux/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n  function ComponentWithRouterProp(props) {\n    _s();\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  }\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n  return ComponentWithRouterProp;\n}\nconst LoginFormContainer = withFormik({\n  mapPropsToValues: () => ({\n    email: \"\",\n    password: \"\"\n  }),\n  validate: values => {\n    let errors = {};\n    validateForm({\n      isAuth: true,\n      values,\n      errors\n    });\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting,\n    props\n  }) => {\n    store.dispatch(userActions.fetchUserLogin(values)).then(({\n      status\n    }) => {\n      if (status === \"success\") {\n        setTimeout(() => {\n          props.history.push(\"/\");\n        }, 50);\n      }\n      setSubmitting(false);\n    });\n  },\n  displayName: \"LoginForm\"\n})(LoginForm);\nexport default LoginFormContainer;","map":{"version":3,"names":["withFormik","useLocation","useNavigate","useParams","LoginForm","validateForm","userActions","store","jsxDEV","_jsxDEV","withRouter","Component","_s","$RefreshSig$","ComponentWithRouterProp","props","location","navigate","params","router","fileName","_jsxFileName","lineNumber","columnNumber","LoginFormContainer","mapPropsToValues","email","password","validate","values","errors","isAuth","handleSubmit","setSubmitting","dispatch","fetchUserLogin","then","status","setTimeout","history","push","displayName"],"sources":["D:/React/projects/02-second-project/messanger-frontend/src/modules/LoginForm/containers/LoginForm.js"],"sourcesContent":["import { withFormik } from \"formik\";\r\nimport { useLocation, useNavigate, useParams, } from \"react-router-dom\";\r\n\r\nimport LoginForm from \"../components/LoginForm\";\r\n\r\nimport validateForm from \"utils/validate\"\r\nimport { userActions } from \"../../../redux/actions\" /* не получается \"redux/actions\", ругается на пакет redux */\r\n\r\nimport store from \"../../../redux/store\"\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n      return (\r\n        <Component\r\n          {...props}\r\n          router={{ location, navigate, params }}\r\n        />\r\n      );\r\n    }\r\n  \r\n    return ComponentWithRouterProp;\r\n  }\r\n\r\nconst LoginFormContainer = withFormik({\r\n    mapPropsToValues: () => (\r\n        {\r\n            email: \"\",\r\n            password: \"\"\r\n        }),\r\n    validate: values => {\r\n        let errors = {}\r\n\r\n        validateForm({ isAuth: true, values, errors })\r\n\r\n        return errors\r\n    },\r\n    handleSubmit: (values, { setSubmitting, props }) => {\r\n        store.dispatch(userActions.fetchUserLogin(values))\r\n            .then(({ status }) => {\r\n                if (status === \"success\") {\r\n                    setTimeout(() => {\r\n                        props.history.push(\"/\")\r\n                    }, 50)\r\n                }\r\n                setSubmitting(false)\r\n            })\r\n    },\r\n    displayName: \"LoginForm\"\r\n\r\n})(LoginForm);\r\n\r\nexport default LoginFormContainer"],"mappings":";AAAA,SAASA,UAAU,QAAQ,QAAQ;AACnC,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAS,kBAAkB;AAEvE,OAAOC,SAAS,MAAM,yBAAyB;AAE/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,wBAAwB,EAAC;;AAErD,OAAOC,KAAK,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAACC,SAAS,EAAE;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC3B,SAASC,uBAAuBA,CAACC,KAAK,EAAE;IAAAH,EAAA;IACtC,IAAII,QAAQ,GAAGf,WAAW,CAAC,CAAC;IAC5B,IAAIgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;IAC5B,IAAIgB,MAAM,GAAGf,SAAS,CAAC,CAAC;IACxB,oBACEM,OAAA,CAACE,SAAS;MAAA,GACJI,KAAK;MACTI,MAAM,EAAE;QAAEH,QAAQ;QAAEC,QAAQ;QAAEC;MAAO;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAEN;EAACX,EAAA,CAVQE,uBAAuB;IAAA,QACfb,WAAW,EACXC,WAAW,EACbC,SAAS;EAAA;EASxB,OAAOW,uBAAuB;AAChC;AAEF,MAAMU,kBAAkB,GAAGxB,UAAU,CAAC;EAClCyB,gBAAgB,EAAEA,CAAA,MACd;IACIC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EACNC,QAAQ,EAAEC,MAAM,IAAI;IAChB,IAAIC,MAAM,GAAG,CAAC,CAAC;IAEfzB,YAAY,CAAC;MAAE0B,MAAM,EAAE,IAAI;MAAEF,MAAM;MAAEC;IAAO,CAAC,CAAC;IAE9C,OAAOA,MAAM;EACjB,CAAC;EACDE,YAAY,EAAEA,CAACH,MAAM,EAAE;IAAEI,aAAa;IAAElB;EAAM,CAAC,KAAK;IAChDR,KAAK,CAAC2B,QAAQ,CAAC5B,WAAW,CAAC6B,cAAc,CAACN,MAAM,CAAC,CAAC,CAC7CO,IAAI,CAAC,CAAC;MAAEC;IAAO,CAAC,KAAK;MAClB,IAAIA,MAAM,KAAK,SAAS,EAAE;QACtBC,UAAU,CAAC,MAAM;UACbvB,KAAK,CAACwB,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QAC3B,CAAC,EAAE,EAAE,CAAC;MACV;MACAP,aAAa,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC;EACV,CAAC;EACDQ,WAAW,EAAE;AAEjB,CAAC,CAAC,CAACrC,SAAS,CAAC;AAEb,eAAeoB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}